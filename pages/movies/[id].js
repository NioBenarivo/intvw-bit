import { useEffect, useState } from 'react'
import axios from 'axios'
import Image from 'next/image'
import Head from 'next/head'
import Link from 'next/link'
import { useRouter } from 'next/router'
import Loader from '@components/Loader'

export default function Movie() {
  const [data, setData] = useState({})
  const [loading, setLoading] = useState(false)
  const router = useRouter()
  const { id } = router.query

  useEffect(() => {
    const getMovieDetail = async (query) => {
      setLoading(true)
      try {
        const res = await axios.get(`http://www.omdbapi.com?apikey=faf7e5bb&i=${query}`)
        const data = res.data || {};
        setData(data);
      } catch (err) {
        console.log(err)
      } finally {
        setLoading(false)
      }
    }

    if (id) {
      const idQuery = id.toString();
      getMovieDetail(idQuery)
    }
  }, [id])

  if (loading) {
    return <Loader />
  }

  const actors = data.Actors || "";
  const awards = data.Awards || "";
  const boxOffice = data.BoxOffice || "";
  const country = data.Country || "";
  const director = data.Director || "";
  const genres = data.Genre || "";
  const lang = data.Language || "";
  const metascore = data.Metascore || "";
  const rated = data.Rated || "";
  const poster = data.Poster || "";
  const released = data.Released || "";
  const runtime = data.Runtime || "";
  const title = data.Title || "";
  const writer = data.Writer || "";
  const year = data.Year || "";
  const imdbRating = data.imdbRating || ""
  const otherRatings = data.Ratings || [];

  return (
    <div className="wrapper">
      <Head>
        <title>Movie App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="container">
        <div className="back-btn">
          <Link href="/movies">
            <a>&#x2190; Back</a>
          </Link>
        </div>
        <div className="movie-details" >
          <div>
            {
              poster && poster !== 'N/A' ? 
                <Image
                alt={title}
                src={poster}
                width={320}
                height={320}
                objectFit="contain"
              /> : 
              <div className="empty-image">
                <span>No Image</span>
              </div>
            }
          </div>
          <div className="flex-auto">
            <div className="flex flex-wrap items-center">
              <h1>{title} ({year})</h1>
              <p>ratings: <span className="ratings">{imdbRating}</span> / 10</p>
            </div>
            
            <div className="divider-block">
              {rated === "N/A" ? '' : <p>{rated}</p>}
              <p>{runtime}</p>
              <p>{genres}</p>
              <p>{released}</p>
            </div>
            
            <p>Director: {director}</p>
            <p>Writer: {writer}</p>
            <p>Stars: {actors}</p>
            <p>Language: {lang}</p>
            <p>Country: {country}</p>
            <p>Box Office: {boxOffice}</p>
            <p>Awards: {awards}</p>

            <div className="divider-block">
              <p>Metascore: {metascore}</p>
              {
                otherRatings.map((rating, index) => (
                  <p key={`${rating}-${index}`}>{rating.Source}: {rating.Value}</p>
                ))
              }
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}